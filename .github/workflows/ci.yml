name: Java Selenium CI with Docker and GitHub Pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      # Start Selenium Grid
      - name: Start Selenium Grid
        run: |
          docker compose up -d selenium-hub
          echo "Waiting for Selenium Hub to be ready..."
          timeout 60 bash -c 'until curl -f http://localhost:4444/wd/hub/status; do sleep 2; done'
          echo "Selenium Hub is ready!"

      # Build test image
      - name: Build Test Image
        run: docker build -t selenium-tests .

      # Run Tests with Selenium Grid
      - name: Run Tests with Selenium Grid
        run: |
          # Run tests using Selenium Grid
          docker run --name selenium-tests-container \
            --network js-project_default \
            -e SELENIUM_REMOTE_URL=http://selenium-hub:4444/wd/hub \
            selenium-tests
          TEST_EXIT_CODE=$?
          
          # Copy reports regardless of test result
          docker cp selenium-tests-container:/app/test-output ./test-output || true
          
          # Clean up containers
          docker rm selenium-tests-container || true
          docker compose down || true
          
          # Fail the pipeline if tests failed
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            echo "❌ Tests failed with exit code: $TEST_EXIT_CODE"
            echo "Pipeline will fail to prevent merging broken code."
            exit 1
          else
            echo "✅ All tests passed successfully!"
          fi

      # Copy Extent Reports from Docker (already done above, but keeping for clarity)
      - name: Verify Test Reports
        run: |
          if [ -d "./test-output" ]; then
            echo "Test reports generated successfully"
            ls -la ./test-output/
          else
            echo "⚠️ No test reports found"
          fi

      # Archive Extent Report
      - name: Archive Extent Report
        uses: actions/upload-artifact@v4
        with:
          name: extent-report
          path: test-output/

  deploy-report:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # Download Extent Report artifact
      - name: Download Extent Report artifact
        uses: actions/download-artifact@v4
        with:
          name: extent-report
          path: ./report

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report
